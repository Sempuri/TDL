:root {
    --dark: #374151;
    --darker: #1f2937;
    --darkest: #111827;
    --gray: #6b7280;
    --light: #eee;
    --pink: #ec4899;
    --purple: #8b5cf6;
}

* {
    box-sizing: border-box;
    margin: 0;
    font-family: 'Poppins', sans-serif;
}

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: var(--dark);
    color: #fff
}

header{
    padding: 2rem 1rem;
    max-width: 800px;
    width: 100%;
    margin: 0 auto;
}

header h1 {
    font-size: 2.5rem;
    font-weight: 300;
    color: var(--gray);
    margin-bottom: 1rem;
}

#to-do-form {
    display: flex;
}

input, button {
    appearance: none;
    border: none;
    outline: none;
    background: none;
}

#new-task-input {
    flex: 1 1 0%;
    background-color: var(--darker);
    padding: 1rem;
    border-radius: 1rem;
    margin-right: 1rem;
    color: var(--light);
    font-size: 1.25rem;
}

#new-task-input::placeholder {
    color: var(--gray);
}

#add-task-button {
    color: var(--pink);
    font-size: 1.25rem;
    font-weight: 700;
    background-image: linear-gradient(to right, var(--pink), var(--purple));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    cursor: pointer;
    transition: 0.4s;
}

#add-task-button:hover {
    opacity: 0.8;
}

#add-task-button:active {
    opacity: 0.6;
}

main {
    flex: 1 1 0%;
    max-width: 800px;
    width: 100%;
    margin: 0 auto;
}

.task-list {
    padding: 1rem;
}

.task-list h2 {
    font-size: 1.5rem;
    font-weight: 300;
    color: var(--gray);
    margin-bottom: 0rem;
}

#tasks .task {
    display: flex;
    justify-content: space-between;
    background-color: var(--darkest);
    padding: 1rem;
    border-radius: 1rem;
    margin-bottom: 1rem;
}

#tasks .task .content .text {
    color: var(--light);
    font-size: 16px;
    width: 100%;
    display: block;
    transition: 0.4s;
}

#tasks .task .content .text:not(:read-only) {
    color: var(--pink);
}

#tasks .task .actions {
    display: flex;
    margin: 0 -0.5rem;
}

.task .actions button {
    cursor: pointer;
    margin: 0 0.5rem;
    font-size:  1.125rem;
    font-weight: 700;
    text-transform: uppercase;
    transition: 0.4s;
}

.task .actions button:hover {
    opacity: 0.8;
}

.task .actions button:active {
    opacity: 0.6;
}

.task .actions .edit {
    background-image: linear-gradient(to right, var(--pink), var(--purple));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

.task .actions .delete {
    color: crimson;
}

.task .actions .edit {
    background-image: linear-gradient(to right, var(--pink), var(--purple));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

.task .actions .delete {
    color: crimson;
}

.content {
    flex: 1 1 0%;
    display: flex;
    align-items: center;
}

.checkbox {
    margin-right: 1rem;
    cursor: pointer;
    width: 20px; /* Adjust size as needed */
    height: 20px; /* Adjust size as needed */
}

/* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    border-radius: 5px;
}

.container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
    border-radius: 5px;
}

/* Create a custom checkbox */
.checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #ccc;
    border-radius: 5px;
    margin-right: 20px; /* Add margin to the right of the checkbox */
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    transition: all 0.2s;
    opacity: 1;
    background-image: linear-gradient(45deg, rgb(100, 61, 219) 0%, rgb(217, 21, 239) 100%);
}

.container input ~ .checkmark {
    transition: all 0.2s;
    opacity: 1;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    opacity: 0;
    transition: all 0.2s;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    opacity: 1;
    transition: all 0.2s;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid white;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
}

.text.completed {
    text-decoration: line-through;
}

.task-list-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

#filter-tasks {
    padding: 0.5rem;
    font-size: 1rem;
    margin-left: 1rem;
}

#no-tasks-message {
    text-align: center;
    color: var(--gray);
    font-size: 1.2rem;
    margin-top: 5rem;
    opacity: 50%;
}