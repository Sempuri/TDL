@keyframes shake {
  0% {
    transform: translateY(0);
  }
  25% {
    transform: translateY(-3px);
  }
  50% {
    transform: translateY(3px);
  }
  75% {
    transform: translateY(-3px);
  }
  100% {
    transform: translateY(0);
  }
}

:root {
  --dark: #374151;
  --darker: #1f2937;
  --darkest: #111827;
  --gray: #6b7280;
  --light: #eee;
  --pink: #ec4899;
  --purple: #8b5cf6;
  --arrow-bg: rgba(255, 255, 255, 0.3);
  --arrow-icon: url(https://upload.wikimedia.org/wikipedia/commons/9/9d/Caret_down_font_awesome_whitevariation.svg);
  --option-bg: white;
  --select-bg: rgba(255, 255, 255, 0.2);
}

* {
  box-sizing: border-box;
  margin: 0;
  font-family: "Poppins", sans-serif;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: #111827;
  color: #fff;
}

.background-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  opacity: 0.5;
  z-index: -1;
  transition: background-image 0.5s ease-in-out;
}

header {
  padding: 2rem 1rem;
  max-width: 800px;
  width: 100%;
  margin: 0 auto;
}

header h1 {
  font-size: 2.5rem;
  font-weight: 300;
  color: var(--light);
  opacity: 0.5;
  margin-bottom: 1rem;
  font-family: Georgia, "Times New Roman", Times, serif;
}

#to-do-form {
  display: flex;
}

#random-activity-btn {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 2rem;
  margin-right: 12px;
  transition: transform 0.2s ease;
}

#random-activity-btn:hover {
  animation: shake 0.3s ease-in-out;
}

input,
button {
  appearance: none;
  border: none;
  outline: none;
  background: none;
}

#new-task-input {
  flex: 1 1 0%;
  background-color: var(--darker);
  padding: 1rem;
  border-radius: 1rem;
  margin-right: 0.5rem;
  color: var(--light);
  font-size: 1.25rem;
  font-family: "Poppins", sans-serif;
}

#new-task-input::placeholder {
  color: var(--light);
  opacity: 0.5;
}

#add-task-button {
  color: var(--pink);
  font-size: 1.25rem;
  font-weight: 700;
  background-image: linear-gradient(to right, var(--pink), var(--purple));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  cursor: pointer;
  transition: 0.4s;
}

#add-task-button:hover {
  opacity: 0.8;
}

#add-task-button:active {
  opacity: 0.6;
}

main {
  flex: 1 1 0%;
  max-width: 800px;
  width: 100%;
  margin: 0 auto;
}

.task-list {
  padding: 1rem;
}

.task-list h2 {
  font-size: 1.5rem;
  font-weight: 300;
  color: var(--light);
  opacity: 0.4;
  margin-bottom: 0rem;
  font-family: sans-serif;
}

#tasks .task {
  display: flex;
  justify-content: space-between;
  background-color: var(--darkest);
  opacity: 0.8;
  padding: 1rem;
  border-radius: 1rem;
  margin-bottom: 1rem;
}

#tasks .task .content .text {
  color: var(--light);
  font-size: 16px;
  width: 100%;
  display: block;
  transition: 0.4s;
}

#tasks .task .content .text:not(:read-only) {
  color: var(--pink);
}

#tasks .task .actions {
  display: flex;
  margin: 0 -0.5rem;
}

.task .actions button {
  cursor: pointer;
  margin: 0 0.5rem;
  font-size: 1.125rem;
  font-weight: 700;
  text-transform: uppercase;
  transition: 0.4s;
}

.task .actions button:hover {
  opacity: 0.8;
}

.task .actions button:active {
  opacity: 0.6;
}

.task .actions .edit {
  background-image: linear-gradient(to right, var(--pink), var(--purple));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.task .actions .delete {
  color: crimson;
}

.task .actions .edit {
  background-image: linear-gradient(to right, var(--pink), var(--purple));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.content {
  flex: 1 1 0%;
  display: flex;
  align-items: center;
}

.checkbox {
  margin-right: 1rem;
  cursor: pointer;
  width: 20px; /* Adjust size as needed */
  height: 20px; /* Adjust size as needed */
}

/* Hide the default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
  border-radius: 5px;
}

.container {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
  border-radius: 5px;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #ccc;
  border-radius: 5px;
  margin-right: 20px; /* Add margin to the right of the checkbox */
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  transition: all 0.2s;
  opacity: 1;
  background-image: linear-gradient(
    45deg,
    rgb(100, 61, 219) 0%,
    rgb(217, 21, 239) 100%
  );
}

.container input ~ .checkmark {
  transition: all 0.2s;
  opacity: 1;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  opacity: 0;
  transition: all 0.2s;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  opacity: 1;
  transition: all 0.2s;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 0.45em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border: solid white;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
}

.text.completed {
  text-decoration: line-through;
}

.task-list-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

#filter-tasks {
  padding: 0.5rem;
  font-size: 1rem;
  margin-left: 1rem;

  background-color: var(--darkest);
  color: var(--light);
}

#filter-tasks option {
  background-color: var(--darkest);
  color: var(--light);
}

#no-tasks-message {
  text-align: center;
  color: var(--gray);
  font-size: 1.2rem;
  margin-top: 5rem;
  opacity: 50%;
}

.last-updated {
  color: var(--gray);
  font-size: 0.8rem;
  font-family: "Poppins", sans-serif;
  display: block; /* Ensure it takes up its own line */
  text-align: right;
}

/* Task container styles */
.task {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--darkest);
  padding: 1rem;
  border-radius: 1rem;
  margin-bottom: 1rem;
  position: relative;
  overflow: hidden;
  transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

/* Add background highlight and subtle shadow on hover */
.task:hover {
  box-shadow: 0px 5px 15px rgba(255, 255, 255, 0.6);
  transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out,
    transform 0.2s ease-in-out;
}
/* Content area styles - removed animation */
.task .content {
  flex: 1;
}

/* Task actions container */
.task .actions {
  display: flex;
  gap: 0.5rem;
  position: absolute;
  right: 1rem;
  transform: translateX(120%);
  transition: transform 0.3s ease-in-out;
}

/* Last updated text animation */
.last-updated {
  transition: opacity 0.3s ease-in-out;
}

.task:hover .last-updated {
  opacity: 0;
}

/* Show actions on hover */
.task:hover .actions {
  transform: translateX(0);
}

/* Individual button animations */
.task .actions button {
  opacity: 0;
  transform: translateX(20px);
  transition: all 0.3s ease-in-out;
}

.task:hover .actions button {
  opacity: 1;
  transform: translateX(0);
}

/* Darken the text on hover */
.task .actions .edit:hover {
  filter: brightness(0.7); /* Darkens the gradient text */
  transition: filter 0.1s ease-in-out; /* Faster darkening */
}

.task .actions .delete:hover {
  filter: brightness(0.7); /* Darkens the gradient text */
  transition: filter 0.1s ease-in-out; /* Faster darkening */
}

/* Dropdown Styling */
#filter-tasks {
  /* Reset */
  appearance: none;
  border: 0;
  outline: 0;
  font: inherit;
  opacity: 0.7;
  width: 9rem;
  height: 2.5rem;
  padding: 1px 0.7em;
  background: var(--arrow-icon) no-repeat right 0.4em center / 1.2em,
    linear-gradient(to left, var(--arrow-bg) 2em, var(--select-bg) 2em);
  color: white;
  border-radius: 0.5em;
  cursor: pointer;
}

#add-task-button {
  font-size: 3rem; /* Bigger plus symbol */
  font-weight: bold;
  width: 3rem; /* Square shape */
  height: 3rem;
  text-align: center;
  line-height: 3rem;
  background: linear-gradient(to right, var(--purple), var(--pink));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  cursor: pointer;
  transition: transform 0.3s ease-in-out;
}

.header-content {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  justify-content: space-between;
}

#cycle-images-button {
  border: none;
  outline: none;
  background-color: #6c5ce7;
  padding: 10px 15px;
  margin-bottom: 20px;
  margin-right: 20px;
  font-size: 12px;
  font-weight: 700;
  color: #fff;
  border-radius: 5px;
  transition: all ease 0.1s;
  box-shadow: 0px 5px 0px 0px #a29bfe;
}

#cycle-images-button:active {
  transform: translateY(5px);
  box-shadow: 0px 0px 0px 0px #a29bfe;
}

.popup {
  --burger-line-width: 1.125em;
  --burger-line-height: 0.125em;
  --burger-offset: 0.625em;
  --burger-bg: rgba(223, 236, 244, 0.9);
  --burger-color: #333;
  --burger-line-border-radius: 0.1875em;
  --burger-diameter: 2.125em;
  --burger-btn-border-radius: calc(var(--burger-diameter) / 2);
  --burger-line-transition: 0.3s;
  --burger-transition: all 0.1s ease-in-out;
  --burger-hover-scale: 1.1;
  --burger-active-scale: 0.95;
  --burger-enable-outline-color: var(--burger-bg);
  --burger-enable-outline-width: 0.125em;
  --burger-enable-outline-offset: var(--burger-enable-outline-width);
  /* nav */
  --nav-padding-x: 0.25em;
  --nav-padding-y: 0.625em;
  --nav-border-radius: 0.375em;
  --nav-border-color: #ccc;
  --nav-border-width: 0.0625em;
  --nav-shadow-color: rgba(0, 0, 0, 0.2);
  --nav-shadow-width: 0 1px 5px;
  --nav-bg: #eee;
  --nav-font-family: Menlo, Roboto Mono, monospace;
  --nav-default-scale: 0.8;
  --nav-active-scale: 1;
  --nav-position-left: 0;
  --nav-position-right: unset;
  /* if you want to change sides just switch one property */
  /* from properties to "unset" and the other to 0 */
  /* title */
  --nav-title-size: 0.62em;
  --nav-title-color: #777;
  --nav-title-padding-x: 1rem;
  --nav-title-padding-y: 0.25em;
  /* nav button */
  --nav-button-padding-x: 1rem;
  --nav-button-padding-y: 0.375em;
  --nav-button-border-radius: 0.375em;
  --nav-button-font-size: 12px;
  --nav-button-hover-bg: #6495ed;
  --nav-button-hover-text-color: #fff;
  --nav-button-distance: 0.875em;
  /* underline */
  --underline-border-width: 0.0625em;
  --underline-border-color: #ccc;
  --underline-margin-y: 0.3125em;
}

/* popup settings 👆 */

.popup {
  display: inline-block;
  text-rendering: optimizeLegibility;
  position: relative;
}

.popup input {
  display: none;
}

.burger {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  background: var(--burger-bg);
  width: var(--burger-diameter);
  height: var(--burger-diameter);
  border-radius: var(--burger-btn-border-radius);
  border: none;
  cursor: pointer;
  overflow: hidden;
  transition: var(--burger-transition);
  outline: var(--burger-enable-outline-width) solid transparent;
  outline-offset: 0;
}

.burger span {
  height: var(--burger-line-height);
  width: var(--burger-line-width);
  background: var(--burger-color);
  border-radius: var(--burger-line-border-radius);
  position: absolute;
  transition: var(--burger-line-transition);
}

/* Positioning the lines */
.burger span:nth-child(1) {
  top: var(--burger-offset);
}

.burger span:nth-child(2) {
  top: 50%;
  transform: translateY(-50%);
}

.burger span:nth-child(3) {
  bottom: var(--burger-offset);
}

/* Transform to X on hover */
.popup:hover .burger span:nth-child(1) {
  top: 50%;
  transform: translateY(-50%) rotate(45deg);
}

.popup:hover .burger span:nth-child(2) {
  opacity: 0; /* Hide the middle line */
}

.popup:hover .burger span:nth-child(3) {
  bottom: 50%;
  transform: translateY(50%) rotate(-45deg);
}

.popup-window {
  transform: scale(var(--nav-default-scale));
  visibility: hidden;
  opacity: 0;
  position: absolute;
  padding: var(--nav-padding-y) var(--nav-padding-x);
  background: var(--nav-bg);
  font-family: var(--nav-font-family);
  color: var(--nav-text-color);
  border-radius: var(--nav-border-radius);
  box-shadow: var(--nav-shadow-width) var(--nav-shadow-color);
  border: var(--nav-border-width) solid var(--nav-border-color);
  padding-top: 10px;
  top: calc(var(--burger-diameter) - 3px);
  left: var(--nav-position-left);
  right: var(--nav-position-right);
  transition: var(--burger-transition);
}

.popup-window legend {
  padding: var(--nav-title-padding-y) var(--nav-title-padding-x);
  margin: 0;
  color: var(--nav-title-color);
  font-size: var(--nav-title-size);
  text-transform: uppercase;
}

.popup-window ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.popup-window ul button {
  outline: none;
  width: 100%;
  border: none;
  background: none;
  display: flex;
  align-items: center;
  color: var(--burger-color);
  font-size: var(--nav-button-font-size);
  padding: var(--nav-button-padding-y) var(--nav-button-padding-x);
  white-space: nowrap;
  border-radius: var(--nav-button-border-radius);
  cursor: pointer;
  column-gap: var(--nav-button-distance);
}

.popup-window ul li:nth-child(1) svg,
.popup-window ul li:nth-child(2) svg {
  color: cornflowerblue;
}

.popup-window ul li:nth-child(4) svg,
.popup-window ul li:nth-child(5) svg {
  color: rgb(153, 153, 153);
}

.popup-window ul li:nth-child(7) svg {
  color: red;
}

.popup-window hr {
  margin: var(--underline-margin-y) 0;
  border: none;
  border-bottom: var(--underline-border-width) solid
    var(--underline-border-color);
}

/* actions */

.popup-window ul button:hover,
.popup-window ul button:focus-visible,
.popup-window ul button:hover svg,
.popup-window ul button:focus-visible svg {
  color: var(--nav-button-hover-text-color);
  background: var(--nav-button-hover-bg);
}

.burger:hover {
  transform: scale(var(--burger-hover-scale));
}

.burger:active {
  transform: scale(var(--burger-active-scale));
}

.burger:focus:not(:hover) {
  outline-color: var(--burger-enable-outline-color);
  outline-offset: var(--burger-enable-outline-offset);
}

.popup input:checked + .burger span:nth-child(1) {
  top: 50%;
  transform: translateY(-50%) rotate(45deg);
}

.popup input:checked + .burger span:nth-child(2) {
  bottom: 50%;
  transform: translateY(50%) rotate(-45deg);
}

.popup input:checked + .burger span:nth-child(3) {
  transform: translateX(
    calc(var(--burger-diameter) * -1 - var(--burger-line-width))
  );
}

.popup input:checked ~ nav {
  transform: scale(var(--nav-active-scale));
  visibility: visible;
  opacity: 1;
}

/* Show popup window on hover */
.popup:hover .popup-window {
  transform: scale(var(--nav-active-scale));
  visibility: visible;
  opacity: 1;
}

/* Ensure dropdown hides when not hovered */
.popup .popup-window {
  transform: scale(var(--nav-default-scale));
  visibility: hidden;
  opacity: 1;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

/* Custom dropdown styles */
.custom-dropdown {
  position: relative;
  display: inline-block;
}

.dropbtn {
  background-color: var(--select-bg); /* Background color */
  color: white; /* Font color */
  padding: 0.5rem; /* Padding */
  font-size: 1rem; /* Font size */
  border: 1px solid #ccc; /* Border */
  border-radius: 0.5em; /* Rounded corners */
  cursor: pointer; /* Pointer cursor */
  width: 7rem; /* Set width */
}

.dropdown-content {
  display: none; /* Hidden by default */
  position: absolute; /* Position it below the button */
  background-color: var(--option-bg); /* Background color for options */
  min-width: 9rem; /* Minimum width */
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2); /* Shadow */
  z-index: 1; /* On top */
}

.dropdown-option {
  color: #333; /* Font color */
  padding: 12px 16px; /* Padding */
  text-decoration: none; /* No underline */
  display: block; /* Block display */
  cursor: pointer; /* Pointer cursor */
}

/* Show the dropdown on hover */
.custom-dropdown:hover .dropdown-content {
  display: block; /* Show dropdown */
}

/* Change background color on hover */
.dropdown-option:hover {
  background-color: #e0e0e0; /* Light gray on hover */
}
